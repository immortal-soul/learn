<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--数据库相关-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/userData"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="user" class="jdbc.User">
        <property name="username" value="default"/>
        <property name="password" value="default"/>
        <property name="reg_ip" value="default"/>
        <property name="login_ip" value="default"/>
        <property name="phone" value="110"/>
        <property name="status" value="true"/>
        <property name="role" value="3"/>
    </bean>
    <bean id="userDao" class="jdbc.UserDao">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="user" ref="user"/>
        <property name="tm" ref="tm"/>
        <property name="def" ref="def"/>
    </bean>

    <!--事务相关-->
    <!--事务管理器-->
    <bean id="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="def" class="org.springframework.transaction.support.DefaultTransactionDefinition"/>
    <!--声明式事务管理-->
    <!--tx+aop实现 开始-->
    <!--   
    <tx:advice>定义事务通知，用于指定事务属性，其中“transaction-manager”属性指定事务管理器，并通过<tx:attributes>指定具体需要拦截的方法  
    <tx:method>拦截方法，其中参数有：  
    name:方法名称，将匹配的方法注入事务管理，可用通配符  
    propagation：事务传播行为，  
    isolation：事务隔离级别定义；默认为“DEFAULT”  
    timeout：事务超时时间设置，单位为秒，默认-1，表示事务超时将依赖于底层事务系统；  
    read-only：事务只读设置，默认为false，表示不是只读；  
    rollback-for：需要触发回滚的异常定义，可定义多个，以“，”分割，默认任何RuntimeException都将导致事务回滚，而任何Checked Exception将不导致事务回滚；  
    no-rollback-for：不被触发进行回滚的 Exception(s)；可定义多个，以“，”分割；  
    -->
    <!--<tx:advice id="advice" transaction-manager="tm">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="loginUserForUsername"/>-->
            <!--<tx:method name="regUser"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
        <!--<aop:pointcut id="userCut" expression="execution(* jdbc.UserDao.*(..))"/>-->
        <!--<aop:advisor advice-ref="advice" pointcut-ref="userCut"/>-->
    <!--</aop:config>-->
    <!--tx+aop 实现结束-->
    <!--注解实现开始-->
    <!--开启事务注解-->
    <tx:annotation-driven transaction-manager="tm"/>
    <!--注解实现结束-->
</beans>